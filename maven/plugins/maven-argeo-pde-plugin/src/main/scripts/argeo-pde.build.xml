<project>
	<!-- 
		Defaults 
	-->

	<!-- Maven project basedir -->
	<property name="projectDirectory" location="${basedir}" />
	<!-- Maven build dir -->
	<property name="project.build.directory" location="${projectDirectory}/target" />
	<!-- Maven dependency plugin dir -->
	<property name="dependencyDir" location="${project.build.directory}/dependency" />
	<!-- Arguments passed to Eclipse ant -->
	<property name="eclipseAntArgs" value="" />
	<!-- Additional arguments passed to Eclipse build script -->
	<property name="buildScriptProperties" value="" />

	<!-- 
		Argeo PDE folders
	-->
	<!-- Argeo PDE plugin dir -->
	<property name="argeo-pde.dir" location="${project.build.directory}/argeo-pde" />
	<!-- Temporary folder used by Eclipse build -->
	<property name="buildTempFolder" location="${argeo-pde.dir}/temp" />
	<!-- Eclipse Builder -->
	<!--<property name="pdeBuilder" location="${argeo-pde.dir}/pdeBuilder" />-->

	<!-- Eclipse Target -->
	<property name="eclipseTarget" location="${argeo-pde.dir}/eclipseTarget" />
	<property name="pdeBuilder" location="${eclipseTarget}" />

	<!-- TODO: remove this since we build only features? -->
	<available file="${projectDirectory}/plugin.xml" property="elementType" value="plugin" />
	<available file="${projectDirectory}/feature.xml" property="elementType" value="feature" />

	<!-- Destination dirs -->
	<property name="argeo-pde.destinationDir" location="${argeo-pde.dir}/destination" />
	<property name="pluginDestination" location="${argeo-pde.destinationDir}/plugins" />
	<property name="featureDestination" location="${argeo-pde.destinationDir}/features" />

	<!-- Source dirs -->
	<property name="argeo-pde.sourceDir" location="${argeo-pde.dir}/source" />
	<property name="buildDirectory" location="${argeo-pde.sourceDir}" />


	<!-- TODO: make it more generic. Site file template -->
	<property name="siteTemplate" location="${projectDirectory}/site.template" />

	<!-- TODO: put it under argeo-pde. Product build properties -->
	<property name="buildConfiguration" value="buildConfiguration" />
	<property name="buildConfiguration.dir" location="${projectDirectory}/${buildConfiguration}" />



	<!-- 
		Element build properties
	-->

	<!-- 
		TARGET Build Element 
	-->
	<target name="buildElement" depends="init" description="Builds an element (plugin or feature)">
		<fail message="Property buildScriptTargets has to be set" unless="buildScriptTargets" />

		<mkdir dir="${pluginDestination}" />
		<mkdir dir="${featureDestination}" />

		<!-- Copy to source -->
		<property name="sourceBaseDir" location="${projectDirectory}/../.." />
		<copy todir="${argeo-pde.sourceDir}">
			<fileset dir="${sourceBaseDir}">
				<include name="plugins/**" />
				<include name="features/**" />
				<exclude name="**/target/**" />
				<exclude name="**/.svn/**" />
			</fileset>
		</copy>

		<property name="elementBuildScript" location="${buildDirectory}/${elementType}s/${elementId}/build.xml" />

		<eclipseAnt antfile="${ant.file}" antargs="eclipse.generateScripts -DpdeBuilder=${pdeBuilder} -DpluginPath=${dependencyDir} -DprojectDirectory=${projectDirectory} -DeclipseBuildDir=${eclipseBuildDir} -DelementId=${elementId} -DbuildDirectory=${buildDirectory}" />
		<eclipseAnt antfile="${elementBuildScript}" antargs="${buildScriptTargets} -Dplugin.destination=${pluginDestination} -Dfeature.destination=${featureDestination}  -DelementId=${elementId} -DbuildTempFolder=${buildTempFolder} -Dtemp.folder=${buildTempFolder}/temp.folder -Dfeature.temp.folder=${buildTempFolder}/feature.temp.folder ${buildScriptProperties}" />

		<copy todir="${project.build.directory}">
			<fileset dir="${featureDestination}">
				<include name="*.zip" />
			</fileset>
			<mergemapper to="${elementId}.zip" />
		</copy>

		<!-- Update site -->
		<copy tofile="${project.build.directory}/site.xml" file="${siteTemplate}">
			<filterset begintoken="$${" endtoken="}">
				<filtersfile file="${buildDirectory}/finalFeaturesVersions.properties" />
			</filterset>
		</copy>
		<zip destfile="${project.build.directory}/${elementId}-updatesite.zip">
			<fileset dir="${project.build.directory}">
				<include name="plugins/*.jar" />
				<include name="features/*.jar" />
				<include name="site.xml" />
			</fileset>
		</zip>
	</target>

	<!-- 
		TARGET Build Product 
	-->
	<target name="buildProduct" depends="init" description="Builds a product">
		<!-- Load provided build.properties to leave a chance to override -->
		<property file="${buildConfiguration.dir}/build.properties" />
		<!-- Set default properties -->
		<property name="archivePrefix" value="${elementId}" />
		<property name="buildId" value="${archivePrefix}" />
		<property name="buildLabel" value="${archivePrefix}" />
		<property name="collectingFolder" value="${archivePrefix}" />
		<property name="skipFetch" value="true" />
		<property name="skipMaps" value="true" />
		<property name="runPackager" value="true" />

		<!-- Find PDE build file -->
		<pathconvert pathsep="" property="productBuildFile">
			<path>
				<fileset dir="${pdeBuilder}/plugins">
					<include name="org.eclipse.pde.build_*/scripts/productBuild/productBuild.xml" />
				</fileset>
			</path>
		</pathconvert>
		<echo message="productBuildFile=${productBuildFile}" />

		<!-- Copy sources -->
		<property name="buildDirectory" location="${project.build.directory}/productBuild" />
		<mkdir dir="${buildDirectory}" />
		<copy todir="${buildDirectory}" includeemptydirs="true" verbose="true">
			<fileset dir="${projectDirectory}/../..">
				<include name="plugins/**" />
				<include name="features/**" />
				<exclude name="**/.svn/**" />
				<exclude name="**/target/**" />
			</fileset>
		</copy>

		<!-- Execute -->
		<eclipseAnt antfile="${productBuildFile}" antargs="-Dbuilder=${buildConfiguration.dir} -DbuildDirectory=${buildDirectory} -DbaseLocation=${eclipseTarget} -Dbase=${base} -DpluginPath=${dependencyDir} -DarchivePrefix=${archivePrefix} -DbuildLabel=${buildLabel} -DbuildId=${buildId} -DcollectingFolder=${collectingFolder} -DskipFetch=${skipFetch} -DskipMaps=${skipMaps} -DrunPackager=${runPackager}" />

		<!-- Copy to target dir -->
		<copy todir="${project.build.directory}">
			<fileset dir="${buildDirectory}/${collectingFolder}">
				<include name="*.zip" />
			</fileset>
			<globmapper from="${archivePrefix}-*" to="${elementId}-*" />
		</copy>
	</target>

	<!-- 
		TARGET Clean
	-->
	<target name="clean" depends="init,clean.elementBuildScript" description="Cleans the generated resources">
		<delete dir="${projectDirectory}/workspace" verbose="true" />
		<delete file="${projectDirectory}/javaCompiler...args" verbose="true" />
		<delete>
			<fileset dir="${projectDirectory}/../..">
				<include name="final*.properties" />
				<include name="assemble*.xml" />
				<include name="package*.xml" />
			</fileset>
		</delete>
	</target>

	<target name="clean.elementBuildScript" if="elementBuildScript.exists">
		<ant antfile="${elementBuildScript}" target="clean" />
		<delete file="${elementBuildScript}" verbose="true" />
	</target>

	<!--
		TARGET eclipseTarget
	-->
	<target name="eclipseTarget" description="Creates an Eclipse target location based on the dependencies">
		<taskdef resource="net/sf/antcontrib/antlib.xml" />
		<for param="dir">
			<dirset dir="${project.build.directory}/dependency">
				<include name="*" />
			</dirset>
			<sequential>
				<!--
				<move todir="@{dir}" failonerror="false">
					<fileset dir="@{dir}/eclipse">
						<include name="**" />
					</fileset>
				</move>
				<delete dir="@{dir}/eclipse" failonerror="false" quiet="true" />
				-->
				<copy todir="${eclipseTarget}" failonerror="false">
					<fileset dir="@{dir}">
						<include name="plugins/**" />
						<include name="features/**" />
					</fileset>
				</copy>
				<copy todir="${eclipseTarget}" failonerror="false">
					<fileset dir="@{dir}/eclipse">
						<include name="plugins/**" />
						<include name="features/**" />
					</fileset>
				</copy>
			</sequential>
		</for>

		<!-- Copy configuration from SDK -->
		<for param="dir">
			<dirset dir="${project.build.directory}/dependency">
				<include name="eclipse-sdk-*" />
			</dirset>
			<sequential>
				<copy todir="${eclipseTarget}" failonerror="false">
					<fileset dir="@{dir}/eclipse">
						<include name="configuration/**" />
					</fileset>
				</copy>
			</sequential>
		</for>
	</target>

	<!-- 
		COMMON UTILITIES 
	-->
	<target name="init">
		<!-- Init Base 
		<property name="base" location="${eclipseBuildDir}" />
		<property name="baseLocation" location="${base}/eclipse" />
		<property name="pdeBuilder" location="${eclipseBuildDir}/argeo-slc-pde" />
		<property name="pluginPathBase" location="${eclipseBuildDir}/pluginPath" />
-->
		<path id="pdeBuilder.launcher.classpath">
			<fileset dir="${pdeBuilder}/plugins">
				<include name="org.eclipse.equinox.launcher_*.jar" />
			</fileset>
		</path>

		<!-- Log properties -->
		<echo message="basedir=${basedir}" />
		<echo message="ant.file=${ant.file}" />
		<echo message="projectDirectory=${projectDirectory}" />

		<!--<echo message="eclipseBuildDir=${eclipseBuildDir}" />
		<echo message="base=${base}" />
		<echo message="baseLocation=${baseLocation}" />
		<echo message="pdeBuilder=${pdeBuilder}" />
		<echo message="localBuildDir=${localBuildDir}" />
		<echo message="pluginPathBase=${pluginPathBase}" />
-->
		<echo message="pdeBuilder=${pdeBuilder}" />
		<echo message="eclipseTarget=${eclipseTarget}" />

		<echo message="elementType=${elementType}" />
		<echo message="elementId=${elementId}" />
		<echo message="elementBuildScript=${elementBuildScript}" />
		<echo message="buildScriptTargets=${buildScriptTargets}" />
		<echo message="buildScriptProperties=${buildScriptProperties}" />

		<echo message="eclipseAntArgs=${eclipseAntArgs}" />

		<echo message="buildConfiguration.dir=${buildConfiguration.dir}" />

		<available file="${elementBuildScript}" property="elementBuildScript.exists" value="true" />
	</target>
	<!--
	<target name="setPluginPath">
		<mkdir dir="${dependencyDir}" />
		<pathconvert property="pluginPath">
			<path>
				<pathelement location="${dependencyDir}" />
				<dirset dir="${pluginPathBase}">
					<include name="*" />
				</dirset>
			</path>
		</pathconvert>
		<echo message="pluginPath=${pluginPath}" />
	</target>
-->
	<!-- TARGETS TO BE CALLED WITH ANT ECLIPSE -->
	<target name="eclipse.generateScripts" depends="init">
		<fail message="Property elementType has to be set" unless="elementType" />
		<eclipse.buildScript elements="${elementType}@${elementId}" buildDirectory="${buildDirectory}" baseLocation="${eclipseTarget}" outputUpdateJars="true" generateVersionsLists="true" pluginPath="${dependencyDir}" />
	</target>

	<!-- MACRODEFS -->
	<macrodef name="eclipseAnt">
		<attribute name="antfile" />
		<attribute name="antargs" />
		<sequential>
			<echo message="Call Eclipse Ant for file @{antfile} with args ${eclipseAntArgs} @{antargs}" />
			<java fork="true" classname="org.eclipse.core.launcher.Main" failonerror="true">
				<classpath refid="pdeBuilder.launcher.classpath" />
				<arg line="-data ${argeo-pde.dir}/workspace" />
				<arg line="-application org.eclipse.ant.core.antRunner" />
				<arg line="-buildfile @{antfile}" />
				<arg line="${eclipseAntArgs}" />
				<arg line="@{antargs}" />
			</java>
		</sequential>
	</macrodef>
</project>