<slc = 'http://www.argeo.org/ns/slc'>

// COMMON
[slc:nameVersion] > nt:base
mixin
- slc:name (STRING) m
- slc:version (STRING) m

// AGENT
[slc:agentFactory] > nt:unstructured, mix:title
+ * (slc:agent)

[slc:agent] > nt:unstructured, mix:title
+ * (slc:module)

[slc:module] > slc:nameVersion, mix:title
mixin

[slc:activableModule] > slc:module
mixin

[slc:executionModule] > slc:activableModule
mixin

[slc:executionSpec] > nt:unstructured, mix:referenceable, mix:title
- slc:name (STRING) m
+ * (slc:executionSpecAttribute) *

[slc:executionSpecAttribute] > nt:base
mixin abstract
- slc:isImmutable (BOOLEAN) 
- slc:isConstant (BOOLEAN) 
- slc:isHidden (BOOLEAN) 

[slc:primitiveSpecAttribute] > slc:executionSpecAttribute
mixin
- slc:type (STRING) 
- slc:value (UNDEFINED)

[slc:refSpecAttribute] > slc:executionSpecAttribute
orderable
mixin
// typically a class name
- slc:type (STRING)
- slc:value (UNDEFINED)
+ * (mix:title)

[slc:executionFlow] > nt:unstructured, mix:title
- slc:name (STRING) ! m
// if the execution spec is a referenceable node
- slc:spec (REFERENCE)
// if the execution spec is internal (without name)
+ * (slc:executionSpecAttribute) *

// PROCESS
[slc:process] > nt:unstructured, mix:created, mix:lastModified
orderable
- slc:uuid (STRING) ! m
- slc:status (STRING) m
+ slc:flow (slc:realizedFlow)
+ slc:log

// The first part of the relative path is the thread name, rest is location
[slc:logEntry] > nt:unstructured
abstract
- slc:message (STRING) !
- slc:timestamp (STRING)

// Log levels are set via types.
// Querying one level also queries the higher levels thanks to the inheritance
// e.g. 'select * from [slc:logWarn]' also returns errors 
[slc:logTrace] > slc:logEntry

[slc:logDebug] > slc:logTrace

[slc:logInfo] > slc:logDebug

[slc:logWarning] > slc:logInfo

[slc:logError] > slc:logWarning

[slc:realizedFlow] > nt:base
orderable
mixin
// the name of the flow
// - slc:flow (STRING)
// the name of the execution spec
// - slc:spec (STRING)
- slc:started (DATE)
- slc:completed (DATE)
//- slc:status (STRING)
+ slc:address (nt:address)
+ slc:flow (slc:realizedFlow) *
// the realized execution spec attributes
+ * (slc:executionSpecAttribute) *

// RESULT
[slc:testResult] > nt:unstructured, mix:created, mix:lastModified
- slc:uuid (STRING) ! m
- slc:testCase (STRING)
- slc:completed (DATE)
// Helper to keep a centralize place to have testResultStatus
// when adding more than one result part to a given testResult 
+ slc:aggregatedStatus (slc:check)

[slc:diffResult] > slc:testResult
+ slc:summary
+ slc:issues

[slc:resultFolder] > nt:unstructured
+ slc:folderStatus (slc:check)
+ * (slc:resultFolder) *
+ * (slc:testResult) *

// base node for user defined and managed result tree
// simplify UI management
[slc:myResultRootFolder] > nt:unstructured
+ * (slc:resultFolder) *
+ * (slc:testResult) *

[slc:check] > nt:unstructured
// true for PASSED, false for FAILED or ERROR
- slc:success (BOOLEAN) ! m
- slc:message (STRING)
// ERROR if set, the check could not be performed because of an unexpected exception
- slc:errorMessage (STRING)
// to ease transition with legacy approach
+ * (slc:property) *

[slc:property] > nt:unstructured
- slc:name (STRING) ! m
- slc:value (STRING) m
